{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Documents\\\\test\\\\goit-react-hw-04-hooks-phonebook\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport Section from './components/Section/Section';\nimport ContactList from './components/ContactList/ContactList';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  let arr = [{\n    id: 'id-1',\n    name: 'Rosie Simpson',\n    number: 4591256\n  }, {\n    id: 'id-2',\n    name: 'Hermione Kline',\n    number: '443-89-12'\n  }, {\n    id: 'id-3',\n    name: 'Eden Clements',\n    number: '645-17-79'\n  }, {\n    id: 'id-4',\n    name: 'Annie Copeland',\n    number: '227-91-26'\n  }];\n  const [contacts, setContacts] = useLocalStorage('contacts', arr);\n  const [filter, setFilter] = useState('');\n\n  const changeContacts = item => {\n    return;\n  }; // state = {\n  //   contacts: [\n  //     { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  //     { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  //     { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  //     { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  //   ],\n  //   filter: '',\n  // };\n  // componentDidMount() {\n  //   const contacts = localStorage.getItem(\"contacts\");\n  //   const parsedContacts = JSON.parse(contacts);\n  //   if (parsedContacts) {\n  //     this.setState({ contacts: parsedContacts });\n  //   }\n  // }\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (this.state.contacts !== prevState.contacts) {\n  //     localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n  //   }\n  // }\n  // formSubmitHandler = item => {\n  //   const { contacts } = this.state;\n  //   const normalizedName = item.name.toLowerCase();\n  //   contacts.find(el => {\n  //     return el.name.toLowerCase() === normalizedName;\n  //   })\n  //     ? alert(`${item.name} is already in contacts`)\n  //     : this.changeContacts(item);\n  // };\n  // changeContacts = item => {\n  //   this.setState(prevState => ({\n  //     contacts: [...prevState.contacts, item],\n  //   }));\n  // };\n  // changeFilter = e => {\n  //   this.setState({ filter: e.target.value });\n  // };\n  // getFilteredContacts = () => {\n  //   const { filter, contacts } = this.state;\n  //   const normalizedFilter = filter.toLowerCase();\n  //   return contacts.filter(contact =>\n  //     contact.name.toLowerCase().includes(normalizedFilter),\n  //   );\n  // };\n  // deleteContact = id => {\n  //   this.setState(prevState => ({\n  //     contacts: prevState.contacts.filter(el => el.id !== id),\n  //   }));\n  // };\n  // render() {\n  //   const filteredContacts = this.getFilteredContacts();\n  //   const { formSubmitHandler, changeFilter } = this;\n  //   const { filter } = this.state;\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Section, {\n      title: \"Phonebook\",\n      children: [/*#__PURE__*/_jsxDEV(ContactForm, {\n        onSubmit: formSubmitHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        value: filter,\n        onChange: changeFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n        list: filteredContacts,\n        onDeleteContact: this.deleteContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this); // }\n}\n\n_s(App, \"lN7hX1PdwytBR9n9t5+EXBRV3Qo=\", true);\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Acer/Documents/test/goit-react-hw-04-hooks-phonebook/src/App.js"],"names":["useState","useEffect","Section","ContactList","ContactForm","Filter","App","arr","id","name","number","contacts","setContacts","useLocalStorage","filter","setFilter","changeContacts","item","formSubmitHandler","changeFilter","filteredContacts","deleteContact"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,MAAIC,GAAG,GAAG,CACR;AAAEC,IAAAA,EAAE,EAAE,MAAN;AAAcC,IAAAA,IAAI,EAAE,eAApB;AAAqCC,IAAAA,MAAM,EAAE;AAA7C,GADQ,EAER;AAAEF,IAAAA,EAAE,EAAE,MAAN;AAAcC,IAAAA,IAAI,EAAE,gBAApB;AAAsCC,IAAAA,MAAM,EAAE;AAA9C,GAFQ,EAGR;AAAEF,IAAAA,EAAE,EAAE,MAAN;AAAcC,IAAAA,IAAI,EAAE,eAApB;AAAqCC,IAAAA,MAAM,EAAE;AAA7C,GAHQ,EAIR;AAAEF,IAAAA,EAAE,EAAE,MAAN;AAAcC,IAAAA,IAAI,EAAE,gBAApB;AAAsCC,IAAAA,MAAM,EAAE;AAA9C,GAJQ,CAAV;AAMA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BC,eAAe,CAAC,UAAD,EAAaN,GAAb,CAA/C;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMgB,cAAc,GAAGC,IAAI,IAAI;AAC7B;AACD,GAFD,CAV4B,CAa5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,WAAf;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAEC;AAAvB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAEJ,MAAf;AAAuB,QAAA,QAAQ,EAAEK;AAAjC;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,WAAD;AACE,QAAA,IAAI,EAAEC,gBADR;AAEE,QAAA,eAAe,EAAE,KAAKC;AAFxB;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF,CA3E4B,CAwF5B;AACD;;GAzFuBf,G;;KAAAA,G","sourcesContent":["import './App.css';\nimport { useState, useEffect } from 'react';\nimport Section from './components/Section/Section';\nimport ContactList from './components/ContactList/ContactList';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\n\nexport default function App() {\n  let arr = [\n    { id: 'id-1', name: 'Rosie Simpson', number: 4591256 },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ];\n  const [contacts, setContacts] = useLocalStorage('contacts', arr);\n  const [filter, setFilter] = useState('');\n\n  const changeContacts = item => {\n    return;\n  };\n  // state = {\n  //   contacts: [\n  //     { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  //     { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  //     { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  //     { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  //   ],\n  //   filter: '',\n  // };\n\n  // componentDidMount() {\n  //   const contacts = localStorage.getItem(\"contacts\");\n  //   const parsedContacts = JSON.parse(contacts);\n  //   if (parsedContacts) {\n  //     this.setState({ contacts: parsedContacts });\n  //   }\n  // }\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (this.state.contacts !== prevState.contacts) {\n  //     localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n  //   }\n  // }\n\n  // formSubmitHandler = item => {\n  //   const { contacts } = this.state;\n  //   const normalizedName = item.name.toLowerCase();\n  //   contacts.find(el => {\n  //     return el.name.toLowerCase() === normalizedName;\n  //   })\n  //     ? alert(`${item.name} is already in contacts`)\n  //     : this.changeContacts(item);\n  // };\n\n  // changeContacts = item => {\n  //   this.setState(prevState => ({\n  //     contacts: [...prevState.contacts, item],\n  //   }));\n  // };\n\n  // changeFilter = e => {\n  //   this.setState({ filter: e.target.value });\n  // };\n\n  // getFilteredContacts = () => {\n  //   const { filter, contacts } = this.state;\n  //   const normalizedFilter = filter.toLowerCase();\n  //   return contacts.filter(contact =>\n  //     contact.name.toLowerCase().includes(normalizedFilter),\n  //   );\n  // };\n\n  // deleteContact = id => {\n  //   this.setState(prevState => ({\n  //     contacts: prevState.contacts.filter(el => el.id !== id),\n  //   }));\n  // };\n\n  // render() {\n  //   const filteredContacts = this.getFilteredContacts();\n  //   const { formSubmitHandler, changeFilter } = this;\n  //   const { filter } = this.state;\n  return (\n    <div className=\"App\">\n      <Section title=\"Phonebook\">\n        <ContactForm onSubmit={formSubmitHandler} />\n        <h1>Contacts</h1>\n        <Filter value={filter} onChange={changeFilter} />\n        <ContactList\n          list={filteredContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </Section>\n    </div>\n  );\n  // }\n}\n"]},"metadata":{},"sourceType":"module"}